Metadata-Version: 2.1
Name: datavistaflow
Version: 0.0.16
Summary: An data visualization library to generate dynamic plots
Home-page: https://github.com/spoorthiuk/datavistaflow
Author: Spoorthi U K
Author-email: spoorthiuday27@gmail.com
License: MIT
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Provides-Extra: dev
License-File: LICENSE

# Datavistaflow
[This python package is under development]
## Installation
Install by typing the following command in the terminal
```python
pip install datavistaflow
```
## Usage
1) Line plot animation

A line graph plotter to create animated graphical visuals.<br />
Parameters:<br />
input : list of tuples containing data to be plotted as a line graph. Each tuple represents a line graph. ex: [(x1_data, y1_data), (x1_data, y1_data)]<br />
plot_style (optional): defines the plot's style. <br />
xlim (optional): defines the x axis limit<br />
ylim (optional): defines the y axis limit<br />
title (optional): Title of the plot<br />
xlabel (optional): defines the x axis label<br />
ylabel (optional): defines the y axis label<br />
n_frames (optional): total number of frames in the animation<br />
frame_interval (optional): time interval between two consecutive frames in milli seconds. Default: 100ms<br />
save (optional): save animation as a GIF<br />

```python
from datavistaflow import plot_line_animation

y1 = [10,20,30,25,60,70,30,12,155,245,223,123,454,22,455,2,22,31]
x1 = list(range(len(y1)))
y2 = [12,-23,31,-23,-62,72,-32]
x2 = list(range(len(y2)))
plot_line_animation(input = [(x1,y1),(x2,y2)], n_frames = len(x1), ylim=[-100,500], xlim=[0,20], xlabel = 'x axis', ylabel = 'y axis', title= 'Test', legend_label= ['y1', 'y2'], plot_style = 'ggplot', save = True, save_animation_name='line_test_animation.gif')
```
2) Scatter plot animation<br />

A scatter graph plotter to create animated graphical visuals.<br />
Parameters:<br />
input : list of tuples containing data to be plotted as a line graph. Each tuple represents a line graph. ex: [(x1_data, y1_data), (x1_data, y1_data)]<br />
plot_style (optional): defines the plot's style. <br />
xlim (optional): defines the x axis limit<br />
ylim (optional): defines the y axis limit<br />
title (optional): Title of the plot<br />
xlabel (optional): defines the x axis label<br />
ylabel (optional): defines the y axis label<br />
n_frames (optional): total number of frames in the animation<br />
frame_interval (optional): time interval between two consecutive frames in milli seconds. Default: 100ms<br />
save (optional): save animation as a GIF<br />
```python
from datavistaflow import plot_scatter_animation

y1 = [10,20,30,25,60,70,30,12,155,245,223,123,454,22,455,2,22,31]
x1 = list(range(len(y1)))
y2 = [12,-23,31,-23,-62,72,-32]
x2 = list(range(len(y2)))
plot_scatter_animation(input = [(x1,y1),(x2,y2)], n_frames = len(x1), ylim=[-100,500], xlim=[0,20], xlabel = 'x axis', ylabel = 'y axis', title= 'Test', legend_label= ['y1', 'y2'], plot_style = 'ggplot', save = True, save_animation_name='line_test_animation.gif')
```
